{"version":3,"sources":["components/Card/Card.js","components/Wrapper/Wrapper.js","components/Header/Header.js","components/Nav/Nav.js","App.js","index.js"],"names":["Card","props","className","onClick","clickCount","id","alt","name","src","image","Wrapper","children","Header","Nav","message","score","highScore","App","state","cards","reset","setState","forEach","count","alert","find","e","i","console","log","this","sort","Math","random","map","key","Component","ReactDOM","render","document","getElementById"],"mappings":"mlDAWeA,G,MARF,SAAAC,GAAK,OAChB,yBAAKC,UAAU,OAAOC,QAAS,kBAAMF,EAAMG,WAAWH,EAAMI,MAC1D,yBAAKH,UAAU,iBACb,yBAAKI,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,YCCxBC,G,MAJC,SAACT,GAAD,OACd,yBAAKC,UAAU,WAAWD,EAAMU,YCUnBC,EATA,SAAAX,GAAK,OAEpB,yBAAKC,UAAU,6HACb,yBAAKA,UAAU,UACb,4BAAI,yDACJ,2GCGWW,G,MARH,SAAAZ,GAAK,OACf,yBAAKC,UAAU,0BACb,wBAAIA,UAAU,SAASD,EAAMU,UAC7B,4BAAKV,EAAMa,SACX,sCAAYb,EAAMc,MAAlB,kBAAwCd,EAAMe,c,OC0EnCC,E,2MAvEbC,MAAQ,CACNC,QACAJ,MAAO,EACPC,UAAW,EACXF,QAAS,0B,EAGTM,MAAQ,WAgBN,OAbI,EAAKF,MAAMH,MAAQ,EAAKG,MAAMF,WAChC,EAAKK,SAAS,CAACL,UAAW,EAAKE,MAAMH,QAIvC,EAAKG,MAAMC,MAAMG,SAAQ,SAAAH,GACvBA,EAAMI,MAAQ,KAGhBC,MAAM,sBAAD,OAAuB,EAAKN,MAAMH,QAGvC,EAAKM,SAAS,CAACN,MAAO,KACf,G,EAOTX,WAAa,SAAAC,GAEX,EAAKa,MAAMC,MAAMM,MAAK,SAACC,EAAGC,GACxB,GAAID,EAAErB,KAAOA,EAAI,CAGf,GAAsB,IAAnBc,EAAMQ,GAAGJ,MAMV,OALAJ,EAAMQ,GAAGJ,MAAQJ,EAAMQ,GAAGJ,MAAQ,EAClC,EAAKF,SAAS,CAACN,MAAQ,EAAKG,MAAMH,MAAQ,IAAI,WAC5Ca,QAAQC,IAAIC,KAAKZ,MAAMH,UAEzB,EAAKG,MAAMC,MAAMY,MAAK,kBAAMC,KAAKC,SAAW,OACrC,EAEP,EAAKb,a,wEASL,IAAD,OACP,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,6BACA,kBAAC,EAAD,CAAKL,MAAOe,KAAKZ,MAAMH,MAAOC,UAAWc,KAAKZ,MAAMF,YACjDc,KAAKZ,MAAMC,MAAMe,KAAI,SAAAf,GAAK,OAC7B,kBAAC,EAAD,CACIf,WAAY,EAAKA,WACjBC,GAAIc,EAAMd,GACV8B,IAAKhB,EAAMd,GACXI,MAAOU,EAAMV,gB,GAnEP2B,a,MCHlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.024ad571.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nconst Card = props => (\n  <div className=\"card\" onClick={() => props.clickCount(props.id)}>\n    <div className=\"img-container\">\n      <img alt={props.name} src={props.image} />\n    </div>\n  </div>\n);\n\nexport default Card;\n","import React from \"react\";\nimport \"./style.css\";\n\nconst Wrapper = (props) => \n  <div className=\"wrapper\">{props.children}</div>;\n\n\nexport default Wrapper;\n","// This page is responsible for the jumbotron and header \n\nimport React from 'react'; \n// import \"./styles.css\"; \n\nconst Header = props => \n\n<div className=\"align-items-center bg-header jumbotron header-hgt header-pad head-mar-top nav-shadow neon text-center yx-auto text-center\">\n  <div className=\"Header\">\n    <h1><strong>Gudetama memory Game</strong></h1>\n    <h2>Click on an image to earn points, but don't click on any more than once!</h2>\n  </div>\n</div>\n\nexport default Header; \n\n\n","// This page is reponsible mainly for the current score and high score \n\nimport React from \"react\";\nimport \"./style.css\";\n\nconst Nav = props => (\n  <nav className='Nav fixed-top bg-light'>\n    <h4 className='title'>{props.children}</h4>\n    <h4>{props.message}</h4>\n    <h4>Score: {props.score} | High Score: {props.highScore}</h4>\n  </nav>\n); \n\nexport default Nav;\n","import React, { Component } from \"react\";\nimport Card from \"./components/Card/Card\";\nimport Wrapper from \"./components/Wrapper/Wrapper\";\nimport Header from \"./components/Header/Header\";\nimport Nav from \"./components/Nav/Nav\"; \nimport cards from \"./Cards.json\";\n\n// By extending the React.Component class, App inherits functionality from it\nclass App extends Component {\n\n  // setting the initial state \n  // setting this.state.cards to the cards json array\n  state = {\n    cards, \n    score: 0, \n    highScore: 0, \n    message: 'Click a card to start!', \n  };\n  \n    reset = () => {\n      // if the new score is greater than the high score, \n      // change the highScore to the new score \n      if (this.state.score > this.state.highScore) {\n        this.setState({highScore: this.state.score});\n      }\n\n      // rset the count 0 \n      this.state.cards.forEach(cards => {\n        cards.count = 0;\n      });\n\n      alert(`You lose \\n score: ${this.state.score}`);\n\n      // reset the score back to 0\n      this.setState({score: 0});\n      return true;\n    }\n\n    // Activity 29 from React 19 folder \n    \n    // function clickCount (id) {}\n    \n    clickCount = id => {\n      // search for the specific card in the array \n      this.state.cards.find((e, i) => {\n        if (e.id === id) {\n\n          // ??\n          if(cards[i].count === 0){\n            cards[i].count = cards[i].count + 1;\n            this.setState({score : this.state.score + 1}, function(){\n              console.log(this.state.score);\n            });\n            this.state.cards.sort(() => Math.random() - 0.5)\n            return true; \n          } else {\n            this.reset();\n          }\n        }\n      });\n    }\n  \n   \n  // The render method returns the JSX that should be rendered\n  // Map over this.state.card and render a Card component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Header>Gudetama Memory Game</Header>\n        <Nav score={this.state.score} highScore={this.state.highScore} />\n          {this.state.cards.map(cards => (\n        <Card\n            clickCount={this.clickCount}\n            id={cards.id}\n            key={cards.id}\n            image={cards.image}\n        />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}